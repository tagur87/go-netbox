/*
NetBox REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.6.2 (3.6)
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package netbox

import (
	"encoding/json"
	"fmt"
)

// PatchedWritableDeviceTypeRequestWeightUnit * `kg` - Kilograms * `g` - Grams * `lb` - Pounds * `oz` - Ounces
type PatchedWritableDeviceTypeRequestWeightUnit string

// List of PatchedWritableDeviceTypeRequest_weight_unit
const (
	PATCHEDWRITABLEDEVICETYPEREQUESTWEIGHTUNIT_KG    PatchedWritableDeviceTypeRequestWeightUnit = "kg"
	PATCHEDWRITABLEDEVICETYPEREQUESTWEIGHTUNIT_G     PatchedWritableDeviceTypeRequestWeightUnit = "g"
	PATCHEDWRITABLEDEVICETYPEREQUESTWEIGHTUNIT_LB    PatchedWritableDeviceTypeRequestWeightUnit = "lb"
	PATCHEDWRITABLEDEVICETYPEREQUESTWEIGHTUNIT_OZ    PatchedWritableDeviceTypeRequestWeightUnit = "oz"
	PATCHEDWRITABLEDEVICETYPEREQUESTWEIGHTUNIT_EMPTY PatchedWritableDeviceTypeRequestWeightUnit = ""
)

// All allowed values of PatchedWritableDeviceTypeRequestWeightUnit enum
var AllowedPatchedWritableDeviceTypeRequestWeightUnitEnumValues = []PatchedWritableDeviceTypeRequestWeightUnit{
	"kg",
	"g",
	"lb",
	"oz",
	"",
}

func (v *PatchedWritableDeviceTypeRequestWeightUnit) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := PatchedWritableDeviceTypeRequestWeightUnit(value)
	for _, existing := range AllowedPatchedWritableDeviceTypeRequestWeightUnitEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid PatchedWritableDeviceTypeRequestWeightUnit", value)
}

// NewPatchedWritableDeviceTypeRequestWeightUnitFromValue returns a pointer to a valid PatchedWritableDeviceTypeRequestWeightUnit
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewPatchedWritableDeviceTypeRequestWeightUnitFromValue(v string) (*PatchedWritableDeviceTypeRequestWeightUnit, error) {
	ev := PatchedWritableDeviceTypeRequestWeightUnit(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for PatchedWritableDeviceTypeRequestWeightUnit: valid values are %v", v, AllowedPatchedWritableDeviceTypeRequestWeightUnitEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v PatchedWritableDeviceTypeRequestWeightUnit) IsValid() bool {
	for _, existing := range AllowedPatchedWritableDeviceTypeRequestWeightUnitEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to PatchedWritableDeviceTypeRequest_weight_unit value
func (v PatchedWritableDeviceTypeRequestWeightUnit) Ptr() *PatchedWritableDeviceTypeRequestWeightUnit {
	return &v
}

type NullablePatchedWritableDeviceTypeRequestWeightUnit struct {
	value *PatchedWritableDeviceTypeRequestWeightUnit
	isSet bool
}

func (v NullablePatchedWritableDeviceTypeRequestWeightUnit) Get() *PatchedWritableDeviceTypeRequestWeightUnit {
	return v.value
}

func (v *NullablePatchedWritableDeviceTypeRequestWeightUnit) Set(val *PatchedWritableDeviceTypeRequestWeightUnit) {
	v.value = val
	v.isSet = true
}

func (v NullablePatchedWritableDeviceTypeRequestWeightUnit) IsSet() bool {
	return v.isSet
}

func (v *NullablePatchedWritableDeviceTypeRequestWeightUnit) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePatchedWritableDeviceTypeRequestWeightUnit(val *PatchedWritableDeviceTypeRequestWeightUnit) *NullablePatchedWritableDeviceTypeRequestWeightUnit {
	return &NullablePatchedWritableDeviceTypeRequestWeightUnit{value: val, isSet: true}
}

func (v NullablePatchedWritableDeviceTypeRequestWeightUnit) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePatchedWritableDeviceTypeRequestWeightUnit) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
