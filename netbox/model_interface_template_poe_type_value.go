/*
NetBox REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.6.2 (3.6)
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package netbox

import (
	"encoding/json"
	"fmt"
)

// InterfaceTemplatePoeTypeValue * `type1-ieee802.3af` - 802.3af (Type 1) * `type2-ieee802.3at` - 802.3at (Type 2) * `type3-ieee802.3bt` - 802.3bt (Type 3) * `type4-ieee802.3bt` - 802.3bt (Type 4) * `passive-24v-2pair` - Passive 24V (2-pair) * `passive-24v-4pair` - Passive 24V (4-pair) * `passive-48v-2pair` - Passive 48V (2-pair) * `passive-48v-4pair` - Passive 48V (4-pair)
type InterfaceTemplatePoeTypeValue string

// List of InterfaceTemplate_poe_type_value
const (
	INTERFACETEMPLATEPOETYPEVALUE_TYPE1_IEEE802_3AF InterfaceTemplatePoeTypeValue = "type1-ieee802.3af"
	INTERFACETEMPLATEPOETYPEVALUE_TYPE2_IEEE802_3AT InterfaceTemplatePoeTypeValue = "type2-ieee802.3at"
	INTERFACETEMPLATEPOETYPEVALUE_TYPE3_IEEE802_3BT InterfaceTemplatePoeTypeValue = "type3-ieee802.3bt"
	INTERFACETEMPLATEPOETYPEVALUE_TYPE4_IEEE802_3BT InterfaceTemplatePoeTypeValue = "type4-ieee802.3bt"
	INTERFACETEMPLATEPOETYPEVALUE_PASSIVE_24V_2PAIR InterfaceTemplatePoeTypeValue = "passive-24v-2pair"
	INTERFACETEMPLATEPOETYPEVALUE_PASSIVE_24V_4PAIR InterfaceTemplatePoeTypeValue = "passive-24v-4pair"
	INTERFACETEMPLATEPOETYPEVALUE_PASSIVE_48V_2PAIR InterfaceTemplatePoeTypeValue = "passive-48v-2pair"
	INTERFACETEMPLATEPOETYPEVALUE_PASSIVE_48V_4PAIR InterfaceTemplatePoeTypeValue = "passive-48v-4pair"
	INTERFACETEMPLATEPOETYPEVALUE_EMPTY             InterfaceTemplatePoeTypeValue = ""
	INTERFACETEMPLATEPOETYPEVALUE_NULL              InterfaceTemplatePoeTypeValue = "null"
)

// All allowed values of InterfaceTemplatePoeTypeValue enum
var AllowedInterfaceTemplatePoeTypeValueEnumValues = []InterfaceTemplatePoeTypeValue{
	"type1-ieee802.3af",
	"type2-ieee802.3at",
	"type3-ieee802.3bt",
	"type4-ieee802.3bt",
	"passive-24v-2pair",
	"passive-24v-4pair",
	"passive-48v-2pair",
	"passive-48v-4pair",
	"",
	"null",
}

func (v *InterfaceTemplatePoeTypeValue) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := InterfaceTemplatePoeTypeValue(value)
	for _, existing := range AllowedInterfaceTemplatePoeTypeValueEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid InterfaceTemplatePoeTypeValue", value)
}

// NewInterfaceTemplatePoeTypeValueFromValue returns a pointer to a valid InterfaceTemplatePoeTypeValue
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewInterfaceTemplatePoeTypeValueFromValue(v string) (*InterfaceTemplatePoeTypeValue, error) {
	ev := InterfaceTemplatePoeTypeValue(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for InterfaceTemplatePoeTypeValue: valid values are %v", v, AllowedInterfaceTemplatePoeTypeValueEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v InterfaceTemplatePoeTypeValue) IsValid() bool {
	for _, existing := range AllowedInterfaceTemplatePoeTypeValueEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to InterfaceTemplate_poe_type_value value
func (v InterfaceTemplatePoeTypeValue) Ptr() *InterfaceTemplatePoeTypeValue {
	return &v
}

type NullableInterfaceTemplatePoeTypeValue struct {
	value *InterfaceTemplatePoeTypeValue
	isSet bool
}

func (v NullableInterfaceTemplatePoeTypeValue) Get() *InterfaceTemplatePoeTypeValue {
	return v.value
}

func (v *NullableInterfaceTemplatePoeTypeValue) Set(val *InterfaceTemplatePoeTypeValue) {
	v.value = val
	v.isSet = true
}

func (v NullableInterfaceTemplatePoeTypeValue) IsSet() bool {
	return v.isSet
}

func (v *NullableInterfaceTemplatePoeTypeValue) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInterfaceTemplatePoeTypeValue(val *InterfaceTemplatePoeTypeValue) *NullableInterfaceTemplatePoeTypeValue {
	return &NullableInterfaceTemplatePoeTypeValue{value: val, isSet: true}
}

func (v NullableInterfaceTemplatePoeTypeValue) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInterfaceTemplatePoeTypeValue) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
