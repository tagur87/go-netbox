/*
NetBox REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.6.2 (3.6)
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package netbox

import (
	"encoding/json"
	"fmt"
)

// PatchedWritableCableRequestLengthUnit * `km` - Kilometers * `m` - Meters * `cm` - Centimeters * `mi` - Miles * `ft` - Feet * `in` - Inches
type PatchedWritableCableRequestLengthUnit string

// List of PatchedWritableCableRequest_length_unit
const (
	PATCHEDWRITABLECABLEREQUESTLENGTHUNIT_KM    PatchedWritableCableRequestLengthUnit = "km"
	PATCHEDWRITABLECABLEREQUESTLENGTHUNIT_M     PatchedWritableCableRequestLengthUnit = "m"
	PATCHEDWRITABLECABLEREQUESTLENGTHUNIT_CM    PatchedWritableCableRequestLengthUnit = "cm"
	PATCHEDWRITABLECABLEREQUESTLENGTHUNIT_MI    PatchedWritableCableRequestLengthUnit = "mi"
	PATCHEDWRITABLECABLEREQUESTLENGTHUNIT_FT    PatchedWritableCableRequestLengthUnit = "ft"
	PATCHEDWRITABLECABLEREQUESTLENGTHUNIT_IN    PatchedWritableCableRequestLengthUnit = "in"
	PATCHEDWRITABLECABLEREQUESTLENGTHUNIT_EMPTY PatchedWritableCableRequestLengthUnit = ""
)

// All allowed values of PatchedWritableCableRequestLengthUnit enum
var AllowedPatchedWritableCableRequestLengthUnitEnumValues = []PatchedWritableCableRequestLengthUnit{
	"km",
	"m",
	"cm",
	"mi",
	"ft",
	"in",
	"",
}

func (v *PatchedWritableCableRequestLengthUnit) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := PatchedWritableCableRequestLengthUnit(value)
	for _, existing := range AllowedPatchedWritableCableRequestLengthUnitEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid PatchedWritableCableRequestLengthUnit", value)
}

// NewPatchedWritableCableRequestLengthUnitFromValue returns a pointer to a valid PatchedWritableCableRequestLengthUnit
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewPatchedWritableCableRequestLengthUnitFromValue(v string) (*PatchedWritableCableRequestLengthUnit, error) {
	ev := PatchedWritableCableRequestLengthUnit(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for PatchedWritableCableRequestLengthUnit: valid values are %v", v, AllowedPatchedWritableCableRequestLengthUnitEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v PatchedWritableCableRequestLengthUnit) IsValid() bool {
	for _, existing := range AllowedPatchedWritableCableRequestLengthUnitEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to PatchedWritableCableRequest_length_unit value
func (v PatchedWritableCableRequestLengthUnit) Ptr() *PatchedWritableCableRequestLengthUnit {
	return &v
}

type NullablePatchedWritableCableRequestLengthUnit struct {
	value *PatchedWritableCableRequestLengthUnit
	isSet bool
}

func (v NullablePatchedWritableCableRequestLengthUnit) Get() *PatchedWritableCableRequestLengthUnit {
	return v.value
}

func (v *NullablePatchedWritableCableRequestLengthUnit) Set(val *PatchedWritableCableRequestLengthUnit) {
	v.value = val
	v.isSet = true
}

func (v NullablePatchedWritableCableRequestLengthUnit) IsSet() bool {
	return v.isSet
}

func (v *NullablePatchedWritableCableRequestLengthUnit) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePatchedWritableCableRequestLengthUnit(val *PatchedWritableCableRequestLengthUnit) *NullablePatchedWritableCableRequestLengthUnit {
	return &NullablePatchedWritableCableRequestLengthUnit{value: val, isSet: true}
}

func (v NullablePatchedWritableCableRequestLengthUnit) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePatchedWritableCableRequestLengthUnit) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
